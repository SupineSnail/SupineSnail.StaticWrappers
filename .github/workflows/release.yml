name: Release

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
        
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
        
    - uses: actions/checkout@v2
    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: 5.0.x
        
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: 6.0.x
        
    - name: Download Dalamud
      if: "!contains(github.event.head_commit.message, '[stg]')"
      run: |
        curl https://goatcorp.github.io/dalamud-distrib/latest.zip --output latest.zip
        mkdir -p ~/Dalamud
        unzip latest.zip -d ~/Dalamud
        
    - name: Download Dalamud staging
      if: "contains(github.event.head_commit.message, '[stg]')"
      run: |
        curl https://goatcorp.github.io/dalamud-distrib/stg/latest.zip --output latest.zip
        mkdir -p ~/Dalamud
        unzip latest.zip -d ~/Dalamud
        
    - name: Restore dependencies
      run: dotnet restore src
      
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:Version=${VERSION} src
      
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release /p:Version=${VERSION} src
      
    - name: Pack
      run: dotnet pack --no-build --configuration Release /p:Version=${VERSION} --output packages src
      
    - name: Push
      run: dotnet nuget push packages/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_TOKEN}
      env:
        NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
